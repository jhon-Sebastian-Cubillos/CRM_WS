// <auto-generated />
using System;
using Inmersys.Domain.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Inmersys.Domain.Migrations
{
    [DbContext(typeof(CRM_DB))]
    [Migration("20221123201515_exp_date_session")]
    partial class expdatesession
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.Client.Cli_Activity", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long>("client_tab_id")
                        .HasColumnType("bigint");

                    b.Property<string>("desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<DateTime>("registred_date")
                        .HasColumnType("datetime");

                    b.HasKey("id");

                    b.HasIndex("client_tab_id");

                    b.ToTable("activity", "client");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.Client.Cli_Asignment", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long>("client_activity_id")
                        .HasColumnType("bigint");

                    b.Property<string>("desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<long>("profile_id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("registred_date")
                        .HasColumnType("datetime");

                    b.HasKey("id");

                    b.HasIndex("client_activity_id");

                    b.HasIndex("profile_id");

                    b.ToTable("asignment", "client");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.Client.Cli_Info", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<long>("nit")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("info", "client");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.Client.Cli_Tab", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long>("client_id")
                        .HasColumnType("bigint");

                    b.Property<string>("desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<DateTime>("registred_date")
                        .HasColumnType("datetime");

                    b.HasKey("id");

                    b.HasIndex("client_id");

                    b.ToTable("tab", "client");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.Definition.Def_Action", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("controller_name")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<string>("method_name")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<DateTime>("registred_date")
                        .HasColumnType("datetime");

                    b.HasKey("id");

                    b.ToTable("action", "definition");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.Definition.Def_Gender", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<DateTime>("registred_date")
                        .HasColumnType("datetime");

                    b.HasKey("id");

                    b.ToTable("gender", "definition");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.Definition.Def_Rol", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<DateTime>("registred_date")
                        .HasColumnType("datetime");

                    b.HasKey("id");

                    b.ToTable("rol", "definition");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.Definition.Def_Window", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("component_name")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<string>("desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("registred_date")
                        .HasColumnType("datetime");

                    b.HasKey("id");

                    b.ToTable("window", "definition");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.History.His_Changes", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("action")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<string>("change")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("preview_change")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("registred_date")
                        .HasColumnType("datetime");

                    b.Property<long>("transact_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("transact_id");

                    b.ToTable("change", "history");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.History.His_Session", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("Jti")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<string>("client_loc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("exp_date")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("registred_date")
                        .HasColumnType("datetime");

                    b.Property<string>("req_ip")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<long>("rol_id")
                        .HasColumnType("bigint");

                    b.Property<long>("user_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("Jti")
                        .IsUnique();

                    b.ToTable("session", "history");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.History.His_Transaction", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<DateTime>("registred_date")
                        .HasColumnType("datetime");

                    b.Property<long>("session_id")
                        .HasColumnType("bigint");

                    b.Property<string>("token_desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("transaction_date")
                        .HasColumnType("datetime");

                    b.HasKey("id");

                    b.HasIndex("session_id");

                    b.ToTable("transaction", "history");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.Profile.Pro_Profile", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<bool>("blocked")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<string>("f_name")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<long>("gender_id")
                        .HasColumnType("bigint");

                    b.Property<long?>("gender_infoid")
                        .HasColumnType("bigint");

                    b.Property<string>("l_name")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<DateTime>("last_log")
                        .HasColumnType("datetime");

                    b.Property<string>("login")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<byte[]>("p_key")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("password")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<short>("tries")
                        .HasColumnType("smallint");

                    b.Property<long>("user_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("gender_infoid");

                    b.ToTable("profile", "profile");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.Security.Sec_Action", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long>("action_id")
                        .HasColumnType("bigint");

                    b.Property<bool>("authorized")
                        .HasColumnType("bit");

                    b.Property<DateTime>("registred_date")
                        .HasColumnType("datetime");

                    b.Property<long>("rol_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("action_id");

                    b.HasIndex("rol_id");

                    b.ToTable("action", "security");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.Security.Sec_Rol", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<long>("profile_id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("registred_date")
                        .HasColumnType("datetime");

                    b.Property<long>("rol_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("profile_id");

                    b.HasIndex("rol_id");

                    b.ToTable("rol", "security");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.Security.Sec_Window", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"));

                    b.Property<DateTime>("registred_date")
                        .HasColumnType("datetime");

                    b.Property<long>("rol_id")
                        .HasColumnType("bigint");

                    b.Property<long>("window_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("rol_id");

                    b.HasIndex("window_id");

                    b.ToTable("window", "security");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.Client.Cli_Activity", b =>
                {
                    b.HasOne("Inmersys.Domain.DB.Schema.Client.Cli_Tab", "client_tab_info")
                        .WithMany("tab_activities_info")
                        .HasForeignKey("client_tab_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("client_tab_info");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.Client.Cli_Asignment", b =>
                {
                    b.HasOne("Inmersys.Domain.DB.Schema.Client.Cli_Activity", "activity_info")
                        .WithMany("asignments_info")
                        .HasForeignKey("client_activity_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inmersys.Domain.DB.Schema.Profile.Pro_Profile", "profile_info")
                        .WithMany("client_asignments_info")
                        .HasForeignKey("profile_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("activity_info");

                    b.Navigation("profile_info");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.Client.Cli_Tab", b =>
                {
                    b.HasOne("Inmersys.Domain.DB.Schema.Client.Cli_Info", "client_info")
                        .WithMany("cient_tabs_info")
                        .HasForeignKey("client_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("client_info");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.History.His_Changes", b =>
                {
                    b.HasOne("Inmersys.Domain.DB.Schema.History.His_Transaction", "transaction_info")
                        .WithMany("changes_info")
                        .HasForeignKey("transact_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("transaction_info");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.History.His_Transaction", b =>
                {
                    b.HasOne("Inmersys.Domain.DB.Schema.History.His_Session", "session_info")
                        .WithMany("transactions_info")
                        .HasForeignKey("session_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("session_info");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.Profile.Pro_Profile", b =>
                {
                    b.HasOne("Inmersys.Domain.DB.Schema.Definition.Def_Gender", "gender_info")
                        .WithMany("profiles_info")
                        .HasForeignKey("gender_infoid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("gender_info");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.Security.Sec_Action", b =>
                {
                    b.HasOne("Inmersys.Domain.DB.Schema.Definition.Def_Action", "action_info")
                        .WithMany("security_roles_info")
                        .HasForeignKey("action_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inmersys.Domain.DB.Schema.Definition.Def_Rol", "rol_info")
                        .WithMany("security_actions_info")
                        .HasForeignKey("rol_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("action_info");

                    b.Navigation("rol_info");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.Security.Sec_Rol", b =>
                {
                    b.HasOne("Inmersys.Domain.DB.Schema.Profile.Pro_Profile", "profile_info")
                        .WithMany("security_roles_info")
                        .HasForeignKey("profile_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inmersys.Domain.DB.Schema.Definition.Def_Rol", "rol_info")
                        .WithMany("security_profiles_info")
                        .HasForeignKey("rol_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("profile_info");

                    b.Navigation("rol_info");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.Security.Sec_Window", b =>
                {
                    b.HasOne("Inmersys.Domain.DB.Schema.Definition.Def_Rol", "rol_info")
                        .WithMany("security_windows_info")
                        .HasForeignKey("rol_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inmersys.Domain.DB.Schema.Definition.Def_Window", "window_info")
                        .WithMany("security_roles_info")
                        .HasForeignKey("window_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("rol_info");

                    b.Navigation("window_info");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.Client.Cli_Activity", b =>
                {
                    b.Navigation("asignments_info");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.Client.Cli_Info", b =>
                {
                    b.Navigation("cient_tabs_info");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.Client.Cli_Tab", b =>
                {
                    b.Navigation("tab_activities_info");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.Definition.Def_Action", b =>
                {
                    b.Navigation("security_roles_info");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.Definition.Def_Gender", b =>
                {
                    b.Navigation("profiles_info");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.Definition.Def_Rol", b =>
                {
                    b.Navigation("security_actions_info");

                    b.Navigation("security_profiles_info");

                    b.Navigation("security_windows_info");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.Definition.Def_Window", b =>
                {
                    b.Navigation("security_roles_info");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.History.His_Session", b =>
                {
                    b.Navigation("transactions_info");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.History.His_Transaction", b =>
                {
                    b.Navigation("changes_info");
                });

            modelBuilder.Entity("Inmersys.Domain.DB.Schema.Profile.Pro_Profile", b =>
                {
                    b.Navigation("client_asignments_info");

                    b.Navigation("security_roles_info");
                });
#pragma warning restore 612, 618
        }
    }
}
